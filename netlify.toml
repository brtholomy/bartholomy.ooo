# Settings in the [build] context are global and are applied to
# all contexts unless otherwise overridden by more specific contexts.
[build]
  command = "hugo --gc --minify"

  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  # If not set, defaults to the root directory.
  # base = "project/"

  # Directory that contains the deploy-ready HTML files and
  # assets generated by the build. This is relative to the base
  # directory if one has been set, or the root directory if
  # a base has not been set. This sample publishes the directory
  # located at the absolute path "root/project/build-output"
  publish = "public"

[build.environment]
  HUGO_VERSION = "0.128.2"
  GO_VERSION = "1.23.1"

[functions]
  directory = "netlify/functions/"

# FIXME: css fails to load on netlify dev. Probably baseUrl is wrong. $DEPLOY_PRIME_URL doesn't seem to be set here.
# Use [dev] to set configuration overrides for local
# development environments run using Netlify Dev - except
# for environment variables. Environment variables for Netlify
# Dev should be set under [context.dev.environment] instead.
# [dev]
  # command = "hugo --gc --minify -b $DEPLOY_PRIME_URL"
  # port = 8888
  # targetPort = 1313
  # publish = "dist"

##############################
# contexts
##############################

# Production context: all deploys from the Production branch
# set in your site's Branches settings in the UI will inherit
# these settings. You can define environment variables
# here but we recommend using the Netlify UI for sensitive
# values to keep them out of your source repository.
# [context.production]
#   publish = "output/"
#   command = "make publish"

# Deploy Preview context: all deploys generated from
# a pull/merge request will inherit these settings.
[context.deploy-preview]
  command = "hugo --gc --minify -b $DEPLOY_PRIME_URL"

# Here is an example of how to define context-specific
# environment variables.
# [context.deploy-preview.environment]
#   HUGO_BASEURL = "/"

# Specific branch context: all deploys from
# this specific branch will inherit these settings.
# “staging” is the branch name
[context.staging]
  command = "hugo --gc --minify --buildDrafts --buildFuture -b $DEPLOY_PRIME_URL"

[context.buttondownapi]
  command = "hugo --gc --minify --buildDrafts --buildFuture -b $DEPLOY_PRIME_URL"

# Dev context: environment variables set here
# are available for local development environments
# run using Netlify Dev. These values can be
# overwritten on branches that have a more specific
# branch context configured.
# [context.dev.environment]
#   NODE_ENV = "development"

##############################
# redirects
##############################

# Redirects and headers are GLOBAL for all builds – they do not
# get scoped to contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files,
# which are PER-DEPLOY.

# order matters, since this is effectively a case block:

################
# shortcut redirects:
# Foundations of Human Worth:
[[redirects]]
  from = "/fhw"
  to = "https://www.youtube.com/watch?v=d_VDr74eTso&list=OLAK5uy_njh3HP7nGW5qjKb0RHfYlfHLdEM2Vdn9E&index=4"
  status = 301

# gist of dot setup
[[redirects]]
  from = "/dotgist"
  to = "https://gist.githubusercontent.com/brtholomy/31e161ffcc8d49310e04cc7f3eb83e86/raw/d2fa944af66df215fb19fcda2ac5c96dbc9297e7/dot_install.sh"
  status = 302

# gcal vs setmore:
[[redirects]]
  from = "/consult"
  to = "https://calendar.app.google/DeM2JqLQsZrmDC5k7"
  # to = "https://bartholomy.setmore.com/beta/book?step=time-slot&products=b72af6bd-73f2-4784-9ed3-4c8897d5b58d&type=service&staff=6cfdce59-41e9-4963-8cf6-b549219397f8&staffSelected=true"
  status = 302

################
# hautogdoad redirects:
[[redirects]]
  from = "/studentship.html"
  to = "/study"
  status = 301

[[redirects]]
  from = "/research.html"
  to = "/about"
  # FIXME: come up with a replacement, using temporary 302 for now:
  status = 302

################
# substack redirects:
[[redirects]]
  from = "/feed"
  to = "/posts/index.xml"
  status = 301

# renamed slugs
[[redirects]]
  from = "/p/the-circularity-of-nietzschean-pedagogy"
  to = "/posts/nietzschean-pedagogy"
  status = 301

[[redirects]]
  from = "/p/the-camera-always-lies"
  to = "/posts/no-photo"
  status = 301

[[redirects]]
  from = "/p/the-witch-hunt-belongs-to-modernity"
  to = "/posts/witchhunt"
  status = 301

[[redirects]]
  from = "/p/we-did-it-not-nudge"
  to = "/posts/nudge"
  status = 301

[[redirects]]
  from = "/p/the-elites-didnt-do-it-either"
  to = "/posts/the-elites"
  status = 301

[[redirects]]
  from = "/p/babyboomers"
  to = "/posts/decrepitude"
  status = 301

[[redirects]]
  from = "/p/babyboomers-podcast"
  to = "/posts/decrepitude-podcast"
  status = 301

[[redirects]]
  from = "/p/we-did-it-not-nudge-ba6"
  to = "/posts/nudge-podcast"
  status = 301

# substack posts not reproduced
# discovered via https://search.google.com/search-console/index?resource_id=sc-domain%253Abartholomy.ooo

[[redirects]]
  from = "/p/talk-to-me"
  to = "/about/"
  status = 302

[[redirects]]
  from = "/p/masshysteria-podcast"
  to = "/posts/masshysteria"
  status = 302

[[redirects]]
  from = "/p/ohms"
  to = "/music"
  status = 302

[[redirects]]
  from = "/p/leukocytic-acidic"
  to = "/music"
  status = 302

# global substack redirect:
# NOTE: this is a case switch catch all, must go at the end:
[[redirects]]
  from = "/p/*"
  to = "/posts/:splat"
  status = 301

################ default stuff for reference

# A redirect rule with many of the supported properties
[[redirects]]
  from = "/old-path"
  to = "/new-path"

  # The default HTTP status code is 301, but you can
  # define a different one.
  status = 301

  # By default, redirects won't be applied if there's a file
  # with the same path as the one defined in the `from` property.
  # Setting `force` to `true` will make the redirect rule
  # take precedence over any existing files.
  force = true

  # Redirect from /old-path?id=123 to /new-path.
  # Each combination of query params needs to be
  # defined in a separate [[redirects]] block.
  # More information at https://docs.netlify.com/routing/redirects/redirect-options/#query-parameters
  query = {id = ":id"}

  # Redirect based on conditions including browser language,
  # geolocation, identity role, and/or cookie presence.
  conditions = {Language = ["en"], Country = ["US"]}

  # Sign each request with a value defined in an environment variable
  signed = "API_SIGNATURE_TOKEN"

  # You can also define custom headers within your redirects blocks.
  [redirects.headers]
    X-From = "Netlify"
    X-Api-Key = "some-api-key-string"

# Redirects for role-based access control don't use the 'to' property.
# [[redirects]]
#   from = "/gated-path"
#   status = 200
#   conditions = {Role = ["admin"]}
#   force = true

# The following redirect is intended for use with most SPAs
# that handle routing internally.
# [[redirects]]
#   from = "/*"
#   to = "/index.html"
#   status = 200

# [[headers]]
#   # Define which paths this specific [[headers]] block will cover.
#   for = "/*"

#   [headers.values]
#     X-Frame-Options = "DENY"
#     X-XSS-Protection = "1; mode=block"
#     Content-Security-Policy = "frame-ancestors https://www.facebook.com"

#     # Multi-value headers are expressed with multi-line strings.
#   cache-control = '''
#   max-age=0,
#   no-cache,
#   no-store,
#   must-revalidate'''

#     # Basic-Auth allows you to password protect your whole site.
#     # This feature may not be available on all plans.
#     Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"
